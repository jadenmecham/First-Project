import drone_config
FLAG = drone_config.FLAG
import matplotlib.pyplot as plt
import sys
sys.path.append('./EKF')
from ekf import ekf as EKF

def plot_noise(t_sim, y_sim, y_sim_noise):
    if FLAG == '2' or FLAG == '3':
        # plot y_sim and y_sim_noise
        fig, ax = plt.subplots(6, 3, figsize=(20, 40), sharex=True)
        # set test size
        # mpl.rcParams['font.size'] = 40
        ax[0, 0].plot(t_sim, y_sim['x'], label='x')
        ax[0, 0].plot(t_sim, y_sim_noise['x'], label='x noise', linestyle='--')
        ax[0, 0].set_ylabel('x [m]')
        ax[0, 1].plot(t_sim, y_sim['y'], label='y')
        ax[0, 1].plot(t_sim, y_sim_noise['y'], label='y noise', linestyle='--')
        ax[0, 1].set_ylabel('y [m]')
        ax[0, 2].plot(t_sim, y_sim['z'], label='z')
        ax[0, 2].plot(t_sim, y_sim_noise['z'], label='z noise', linestyle='--')
        ax[0, 2].set_ylabel('z [m]')
        ax[1, 0].plot(t_sim, y_sim['v_x'], label='v_x')
        ax[1, 0].plot(t_sim, y_sim_noise['v_x'], label='v_x noise', linestyle='--')
        ax[1, 0].set_ylabel('v_x [m/s]')
        ax[1, 1].plot(t_sim, y_sim['v_y'], label='v_y')
        ax[1, 1].plot(t_sim, y_sim_noise['v_y'], label='v_y noise', linestyle='--')
        ax[1, 1].set_ylabel('v_y [m/s]')
        ax[1, 2].plot(t_sim, y_sim['v_z'], label='v_z')
        ax[1, 2].plot(t_sim, y_sim_noise['v_z'], label='v_z noise', linestyle='--')
        ax[1, 2].set_ylabel('v_z [m/s]')
        ax[2, 0].plot(t_sim, y_sim['Ax'], label='Ax')
        ax[2, 0].plot(t_sim, y_sim_noise['Ax'], label='Ax noise', linestyle='--')
        ax[2, 0].set_ylabel('Ax [m/s^2]')
        ax[2, 1].plot(t_sim, y_sim['Ay'], label='Ay')
        ax[2, 1].plot(t_sim, y_sim_noise['Ay'], label='Ay noise', linestyle='--')
        ax[2, 1].set_ylabel('Ay [m/s^2]')
        ax[2, 2].plot(t_sim, y_sim['Az'], label='Az')
        ax[2, 2].plot(t_sim, y_sim_noise['Az'], label='Az noise', linestyle='--')
        ax[2, 2].set_ylabel('Az [m/s^2]')
        ax[3, 0].plot(t_sim, y_sim['psi'], label='psi')
        ax[3, 0].plot(t_sim, y_sim_noise['psi'], label='psi noise', linestyle='--')
        ax[3, 0].set_ylabel('psi [rad]')
        ax[4, 0].plot(t_sim, y_sim['Wax'], label='Wax')
        ax[4, 0].plot(t_sim, y_sim_noise['Wax'], label='Wax noise', linestyle='--')
        ax[4, 0].set_ylabel('Wax [m/s^2]')
        ax[4, 1].plot(t_sim, y_sim['Way'], label='Way')
        ax[4, 1].plot(t_sim, y_sim_noise['Way'], label='Way noise', linestyle='--')
        ax[4, 1].set_ylabel('Way [m/s^2]')
        ax[4, 2].set_visible(False)  # Hide the empty subplot
        ax[5, 0].plot(t_sim, y_sim['rx'], label='rx')
        ax[5, 0].plot(t_sim, y_sim_noise['rx'], label='rx noise', linestyle='--')
        ax[5, 0].set_ylabel('rx [m]')
        ax[5, 1].plot(t_sim, y_sim['ry'], label='ry')
        ax[5, 1].plot(t_sim, y_sim_noise['ry'], label='ry noise', linestyle='--')
        ax[5, 1].set_ylabel('ry [m]')
        ax[5, 2].set_visible(False)  # Hide the empty subplot

        plt.tight_layout()
        plt.show()

    elif FLAG == '4':
        # plot y_sim and y_sim_noise
        fig, ax = plt.subplots(7, 3, figsize=(20, 40), sharex=True)
        # set test size
        # mpl.rcParams['font.size'] = 40
        ax[0, 0].plot(t_sim, y_sim['x'], label='x')
        ax[0, 0].plot(t_sim, y_sim_noise['x'], label='x noise', linestyle='--')
        ax[0, 0].set_ylabel('x [m]')
        ax[0, 1].plot(t_sim, y_sim['y'], label='y')
        ax[0, 1].plot(t_sim, y_sim_noise['y'], label='y noise', linestyle='--')
        ax[0, 1].set_ylabel('y [m]')
        ax[0, 2].plot(t_sim, y_sim['z'], label='z')
        ax[0, 2].plot(t_sim, y_sim_noise['z'], label='z noise', linestyle='--')
        ax[0, 2].set_ylabel('z [m]')
        ax[1, 0].plot(t_sim, y_sim['v_x'], label='v_x')
        ax[1, 0].plot(t_sim, y_sim_noise['v_x'], label='v_x noise', linestyle='--')
        ax[1, 0].set_ylabel('v_x [m/s]')
        ax[1, 1].plot(t_sim, y_sim['v_y'], label='v_y')
        ax[1, 1].plot(t_sim, y_sim_noise['v_y'], label='v_y noise', linestyle='--')
        ax[1, 1].set_ylabel('v_y [m/s]')
        ax[1, 2].plot(t_sim, y_sim['v_z'], label='v_z')
        ax[1, 2].plot(t_sim, y_sim_noise['v_z'], label='v_z noise', linestyle='--')
        ax[1, 2].set_ylabel('v_z [m/s]')
        ax[2, 0].plot(t_sim, y_sim['Ax'], label='Ax')
        ax[2, 0].plot(t_sim, y_sim_noise['Ax'], label='Ax noise', linestyle='--')
        ax[2, 0].set_ylabel('Ax [m/s^2]')
        ax[2, 1].plot(t_sim, y_sim['Ay'], label='Ay')
        ax[2, 1].plot(t_sim, y_sim_noise['Ay'], label='Ay noise', linestyle='--')
        ax[2, 1].set_ylabel('Ay [m/s^2]')
        ax[2, 2].plot(t_sim, y_sim['Az'], label='Az')
        ax[2, 2].plot(t_sim, y_sim_noise['Az'], label='Az noise', linestyle='--')
        ax[2, 2].set_ylabel('Az [m/s^2]')
        ax[3, 0].plot(t_sim, y_sim['phi'], label='phi')
        ax[3, 0].plot(t_sim, y_sim_noise['phi'], label='phi noise', linestyle='--')
        ax[3, 0].set_ylabel('phi [rad]')
        ax[3, 1].plot(t_sim, y_sim['theta'], label='theta')
        ax[3, 1].plot(t_sim, y_sim_noise['theta'], label='theta noise', linestyle='--')
        ax[3, 1].set_ylabel('theta [rad]')
        ax[3, 2].plot(t_sim, y_sim['psi'], label='psi')
        ax[3, 2].plot(t_sim, y_sim_noise['psi'], label='psi noise', linestyle='--')
        ax[3, 2].set_ylabel('psi [rad]')
        ax[4, 0].plot(t_sim, y_sim['Wax'], label='Wax')
        ax[4, 0].plot(t_sim, y_sim_noise['Wax'], label='Wax noise', linestyle='--')
        ax[4, 0].set_ylabel('Wax [m/s]')
        ax[4, 1].plot(t_sim, y_sim['Way'], label='Way')
        ax[4, 1].plot(t_sim, y_sim_noise['Way'], label='Way noise', linestyle='--')
        ax[4, 1].set_ylabel('Way [m/s]')
        ax[4, 2].set_visible(False)
        ax[5, 0].plot(t_sim, y_sim['rx'], label='rx')
        ax[5, 0].plot(t_sim, y_sim_noise['rx'], label='rx noise', linestyle='--')
        ax[5, 0].set_ylabel('rx [m/s]')
        ax[5, 1].plot(t_sim, y_sim['ry'], label='ry')
        ax[5, 1].plot(t_sim, y_sim_noise['ry'], label='ry noise', linestyle='--')
        ax[5, 1].set_ylabel('ry [m/s]')
        ax[5, 2].set_visible(False)
